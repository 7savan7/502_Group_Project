
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AGAR AND ASSIGN ASSIGN_OP BAARBAAR BOOL COLON COMMA DECR DIVIDE EQ FUNCTION GT ID INCR JABTAK LBRACE LPAREN LT MINUS NAHITOH NUMBER OR PLUS PRINT QMARK RBRACE RETURN RPAREN SEMI STRING TIMES TOH TYPEprogram : statement_liststatement_list : statement_list statement\n| statement\n| emptystatement : TYPE ID SEMIstatement : ASSIGN ID ASSIGN_OP expression SEMIassignment : ID ASSIGN_OP expressionstatement : PRINT LPAREN expression RPAREN SEMIexpression : expression QMARK expression COLON expressionexpression : expression AND expression\n| expression OR expressionexpression : expression GT expression\n| expression LT expression\n| expression EQ expressionexpression : expression PLUS expression\n| expression MINUS expression\n| expression TIMES expression\n| expression DIVIDE expressionexpression : ID INCR\n| ID DECRexpression : LPAREN expression RPARENexpression : NUMBERexpression : STRINGexpression : BOOLstatement : AGAR LPAREN expression RPAREN TOH LBRACE statement_list RBRACE NAHITOH LBRACE statement_list RBRACEstatement : JABTAK LPAREN expression RPAREN LBRACE statement_list RBRACEstatement : BAARBAAR LPAREN statement expression SEMI assignment RPAREN LBRACE statement_list RBRACE\n| BAARBAAR LPAREN statement expression SEMI assignment RPAREN LBRACE empty RBRACEfor_init : statement\n| declarationdeclaration : ASSIGN ID ASSIGN_OP expression SEMIexpression : IDstatement : FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACEparameter_list : parameter_list COMMA ID\n| ID\n| emptyexpression : ID LPAREN argument_list RPARENargument_list : argument_list COMMA expression\n| expression\n| emptystatement : RETURN expression SEMIempty :'
    
_lr_action_items = {'TYPE':([0,2,3,4,13,19,27,34,71,72,74,81,82,85,89,90,93,95,97,99,100,101,102,103,104,105,],[5,5,-3,-4,-2,5,-5,-41,-6,-8,5,5,5,5,5,-26,5,5,-33,5,-4,5,-27,-28,5,-25,]),'ASSIGN':([0,2,3,4,13,19,27,34,71,72,74,81,82,85,89,90,93,95,97,99,100,101,102,103,104,105,],[6,6,-3,-4,-2,6,-5,-41,-6,-8,6,6,6,6,6,-26,6,6,-33,6,-4,6,-27,-28,6,-25,]),'PRINT':([0,2,3,4,13,19,27,34,71,72,74,81,82,85,89,90,93,95,97,99,100,101,102,103,104,105,],[7,7,-3,-4,-2,7,-5,-41,-6,-8,7,7,7,7,7,-26,7,7,-33,7,-4,7,-27,-28,7,-25,]),'AGAR':([0,2,3,4,13,19,27,34,71,72,74,81,82,85,89,90,93,95,97,99,100,101,102,103,104,105,],[8,8,-3,-4,-2,8,-5,-41,-6,-8,8,8,8,8,8,-26,8,8,-33,8,-4,8,-27,-28,8,-25,]),'JABTAK':([0,2,3,4,13,19,27,34,71,72,74,81,82,85,89,90,93,95,97,99,100,101,102,103,104,105,],[9,9,-3,-4,-2,9,-5,-41,-6,-8,9,9,9,9,9,-26,9,9,-33,9,-4,9,-27,-28,9,-25,]),'BAARBAAR':([0,2,3,4,13,19,27,34,71,72,74,81,82,85,89,90,93,95,97,99,100,101,102,103,104,105,],[10,10,-3,-4,-2,10,-5,-41,-6,-8,10,10,10,10,10,-26,10,10,-33,10,-4,10,-27,-28,10,-25,]),'FUNCTION':([0,2,3,4,13,19,27,34,71,72,74,81,82,85,89,90,93,95,97,99,100,101,102,103,104,105,],[11,11,-3,-4,-2,11,-5,-41,-6,-8,11,11,11,11,11,-26,11,11,-33,11,-4,11,-27,-28,11,-25,]),'RETURN':([0,2,3,4,13,19,27,34,71,72,74,81,82,85,89,90,93,95,97,99,100,101,102,103,104,105,],[12,12,-3,-4,-2,12,-5,-41,-6,-8,12,12,12,12,12,-26,12,12,-33,12,-4,12,-27,-28,12,-25,]),'$end':([0,1,2,3,4,13,27,34,71,72,90,97,102,103,105,],[-42,0,-1,-3,-4,-2,-5,-41,-6,-8,-26,-33,-27,-28,-25,]),'RBRACE':([3,4,13,27,34,71,72,74,81,82,85,89,90,93,95,97,99,100,101,102,103,104,105,],[-3,-4,-2,-5,-41,-6,-8,-42,-42,90,-42,94,-26,97,-42,-33,102,103,-42,-27,-28,105,-25,]),'ID':([5,6,11,12,16,17,18,23,27,28,32,33,34,35,36,37,38,39,40,41,42,43,44,47,71,72,75,77,78,80,90,92,97,102,103,105,],[14,15,20,22,22,22,22,22,-5,22,22,54,-41,22,22,22,22,22,22,22,22,22,22,22,-6,-8,84,86,22,22,-26,22,-33,-27,-28,-25,]),'LPAREN':([7,8,9,10,12,16,17,18,20,22,23,27,28,32,34,35,36,37,38,39,40,41,42,43,44,47,71,72,78,80,90,92,97,102,103,105,],[16,17,18,19,23,23,23,23,33,47,23,-5,23,23,-41,23,23,23,23,23,23,23,23,23,23,23,-6,-8,23,23,-26,23,-33,-27,-28,-25,]),'NUMBER':([12,16,17,18,23,27,28,32,34,35,36,37,38,39,40,41,42,43,44,47,71,72,78,80,90,92,97,102,103,105,],[24,24,24,24,24,-5,24,24,-41,24,24,24,24,24,24,24,24,24,24,24,-6,-8,24,24,-26,24,-33,-27,-28,-25,]),'STRING':([12,16,17,18,23,27,28,32,34,35,36,37,38,39,40,41,42,43,44,47,71,72,78,80,90,92,97,102,103,105,],[25,25,25,25,25,-5,25,25,-41,25,25,25,25,25,25,25,25,25,25,25,-6,-8,25,25,-26,25,-33,-27,-28,-25,]),'BOOL':([12,16,17,18,23,27,28,32,34,35,36,37,38,39,40,41,42,43,44,47,71,72,78,80,90,92,97,102,103,105,],[26,26,26,26,26,-5,26,26,-41,26,26,26,26,26,26,26,26,26,26,26,-6,-8,26,26,-26,26,-33,-27,-28,-25,]),'SEMI':([14,21,22,24,25,26,45,46,49,50,53,58,59,60,61,62,63,64,65,66,70,79,87,],[27,34,-32,-22,-23,-24,-19,-20,71,72,75,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-37,-9,]),'ASSIGN_OP':([15,84,],[28,92,]),'QMARK':([21,22,24,25,26,29,30,31,45,46,48,49,53,57,58,59,60,61,62,63,64,65,66,68,70,79,87,88,96,],[35,-32,-22,-23,-24,35,35,35,-19,-20,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-21,-37,35,35,35,]),'AND':([21,22,24,25,26,29,30,31,45,46,48,49,53,57,58,59,60,61,62,63,64,65,66,68,70,79,87,88,96,],[36,-32,-22,-23,-24,36,36,36,-19,-20,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-21,-37,36,36,36,]),'OR':([21,22,24,25,26,29,30,31,45,46,48,49,53,57,58,59,60,61,62,63,64,65,66,68,70,79,87,88,96,],[37,-32,-22,-23,-24,37,37,37,-19,-20,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-21,-37,37,37,37,]),'GT':([21,22,24,25,26,29,30,31,45,46,48,49,53,57,58,59,60,61,62,63,64,65,66,68,70,79,87,88,96,],[38,-32,-22,-23,-24,38,38,38,-19,-20,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-21,-37,38,38,38,]),'LT':([21,22,24,25,26,29,30,31,45,46,48,49,53,57,58,59,60,61,62,63,64,65,66,68,70,79,87,88,96,],[39,-32,-22,-23,-24,39,39,39,-19,-20,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-21,-37,39,39,39,]),'EQ':([21,22,24,25,26,29,30,31,45,46,48,49,53,57,58,59,60,61,62,63,64,65,66,68,70,79,87,88,96,],[40,-32,-22,-23,-24,40,40,40,-19,-20,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-21,-37,40,40,40,]),'PLUS':([21,22,24,25,26,29,30,31,45,46,48,49,53,57,58,59,60,61,62,63,64,65,66,68,70,79,87,88,96,],[41,-32,-22,-23,-24,41,41,41,-19,-20,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-21,-37,41,41,41,]),'MINUS':([21,22,24,25,26,29,30,31,45,46,48,49,53,57,58,59,60,61,62,63,64,65,66,68,70,79,87,88,96,],[42,-32,-22,-23,-24,42,42,42,-19,-20,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-21,-37,42,42,42,]),'TIMES':([21,22,24,25,26,29,30,31,45,46,48,49,53,57,58,59,60,61,62,63,64,65,66,68,70,79,87,88,96,],[43,-32,-22,-23,-24,43,43,43,-19,-20,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-21,-37,43,43,43,]),'DIVIDE':([21,22,24,25,26,29,30,31,45,46,48,49,53,57,58,59,60,61,62,63,64,65,66,68,70,79,87,88,96,],[44,-32,-22,-23,-24,44,44,44,-19,-20,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-21,-37,44,44,44,]),'INCR':([22,],[45,]),'DECR':([22,],[46,]),'RPAREN':([22,24,25,26,29,30,31,33,45,46,47,48,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,79,83,86,87,88,96,],[-32,-22,-23,-24,50,51,52,-42,-19,-20,-42,70,-35,76,-36,-10,-11,-12,-13,-14,-15,-16,-17,-18,79,-39,-40,-21,-37,91,-34,-9,-38,-7,]),'COLON':([22,24,25,26,45,46,57,58,59,60,61,62,63,64,65,66,70,79,87,],[-32,-22,-23,-24,-19,-20,78,-10,-11,-12,-13,-14,-15,-16,-17,-18,-21,-37,-9,]),'COMMA':([22,24,25,26,33,45,46,47,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,79,86,87,88,],[-32,-22,-23,-24,-42,-19,-20,-42,-35,77,-36,-10,-11,-12,-13,-14,-15,-16,-17,-18,80,-39,-40,-21,-37,-34,-9,-38,]),'TOH':([51,],[73,]),'LBRACE':([52,73,76,91,98,],[74,81,85,95,101,]),'NAHITOH':([94,],[98,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,74,81,85,95,101,],[2,82,89,93,99,104,]),'statement':([0,2,19,74,81,82,85,89,93,95,99,101,104,],[3,13,32,3,3,13,3,13,13,3,13,3,13,]),'empty':([0,33,47,74,81,85,95,101,],[4,56,69,4,4,4,100,4,]),'expression':([12,16,17,18,23,28,32,35,36,37,38,39,40,41,42,43,44,47,78,80,92,],[21,29,30,31,48,49,53,57,58,59,60,61,62,63,64,65,66,68,87,88,96,]),'parameter_list':([33,],[55,]),'argument_list':([47,],[67,]),'assignment':([75,],[83,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser.py',7),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser.py',17),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',18),
  ('statement_list -> empty','statement_list',1,'p_statement_list','parser.py',19),
  ('statement -> TYPE ID SEMI','statement',3,'p_statement_declaration','parser.py',41),
  ('statement -> ASSIGN ID ASSIGN_OP expression SEMI','statement',5,'p_statement_assignment','parser.py',45),
  ('assignment -> ID ASSIGN_OP expression','assignment',3,'p_assignment','parser.py',49),
  ('statement -> PRINT LPAREN expression RPAREN SEMI','statement',5,'p_statement_print','parser.py',53),
  ('expression -> expression QMARK expression COLON expression','expression',5,'p_expression_ternary','parser.py',57),
  ('expression -> expression AND expression','expression',3,'p_expression_logical','parser.py',61),
  ('expression -> expression OR expression','expression',3,'p_expression_logical','parser.py',62),
  ('expression -> expression GT expression','expression',3,'p_expression_relational','parser.py',66),
  ('expression -> expression LT expression','expression',3,'p_expression_relational','parser.py',67),
  ('expression -> expression EQ expression','expression',3,'p_expression_relational','parser.py',68),
  ('expression -> expression PLUS expression','expression',3,'p_expression_arithmetic','parser.py',72),
  ('expression -> expression MINUS expression','expression',3,'p_expression_arithmetic','parser.py',73),
  ('expression -> expression TIMES expression','expression',3,'p_expression_arithmetic','parser.py',74),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_arithmetic','parser.py',75),
  ('expression -> ID INCR','expression',2,'p_expression_increment','parser.py',79),
  ('expression -> ID DECR','expression',2,'p_expression_increment','parser.py',80),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',84),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',88),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',92),
  ('expression -> BOOL','expression',1,'p_expression_bool','parser.py',96),
  ('statement -> AGAR LPAREN expression RPAREN TOH LBRACE statement_list RBRACE NAHITOH LBRACE statement_list RBRACE','statement',12,'p_statement_if_else','parser.py',100),
  ('statement -> JABTAK LPAREN expression RPAREN LBRACE statement_list RBRACE','statement',7,'p_statement_while','parser.py',104),
  ('statement -> BAARBAAR LPAREN statement expression SEMI assignment RPAREN LBRACE statement_list RBRACE','statement',10,'p_statement_for','parser.py',108),
  ('statement -> BAARBAAR LPAREN statement expression SEMI assignment RPAREN LBRACE empty RBRACE','statement',10,'p_statement_for','parser.py',109),
  ('for_init -> statement','for_init',1,'p_for_init','parser.py',116),
  ('for_init -> declaration','for_init',1,'p_for_init','parser.py',117),
  ('declaration -> ASSIGN ID ASSIGN_OP expression SEMI','declaration',5,'p_declaration','parser.py',121),
  ('expression -> ID','expression',1,'p_expression_variable','parser.py',125),
  ('statement -> FUNCTION ID LPAREN parameter_list RPAREN LBRACE statement_list RBRACE','statement',8,'p_function_definition','parser.py',136),
  ('parameter_list -> parameter_list COMMA ID','parameter_list',3,'p_parameter_list','parser.py',140),
  ('parameter_list -> ID','parameter_list',1,'p_parameter_list','parser.py',141),
  ('parameter_list -> empty','parameter_list',1,'p_parameter_list','parser.py',142),
  ('expression -> ID LPAREN argument_list RPAREN','expression',4,'p_function_call','parser.py',154),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','parser.py',158),
  ('argument_list -> expression','argument_list',1,'p_argument_list','parser.py',159),
  ('argument_list -> empty','argument_list',1,'p_argument_list','parser.py',160),
  ('statement -> RETURN expression SEMI','statement',3,'p_statement_return','parser.py',172),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',176),
]
